
<UserControl     x:Class="Jet_Electric_Inter.Views.ProjectAddNew"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:local="clr-namespace:Jet_Electric_Inter.Views"
                 xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"         
                 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                 xmlns:src="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:domain="clr-namespace:Jet_Electric_Inter.Logic"
                 Background="{DynamicResource MaterialDesignPaper}"
                 FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
                 TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                 TextElement.FontWeight="Regular"
                 TextElement.FontSize="12"
                 TextOptions.TextFormattingMode="Ideal" 
                 TextOptions.TextRenderingMode="Auto" 
                 
                 Height="Auto"
                 Width="Auto"     
                 Loaded="Window_Loaded">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- note you only need bring in these extra resource dictionaries when using non-default styles, so only bring them into your controls where the default style is not what you want -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
                <!-- throw in some extra colour for our floating action button -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Green.Named.Primary.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource MaterialDesignPasswordBox}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignComboBox}">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type Viewbox}">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Margin" Value="0 0 8 0" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource MaterialDesignSlider}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="100" />
        </Grid.RowDefinitions>

        <ScrollViewer Grid.Row="0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0 20 0 0">
            <Grid Margin="0,0,0,20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="400" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" FontWeight="DemiBold" Foreground="White" FontSize="22" FontFamily="Segoe Print" >Add Project Details</TextBlock>

                <DataGrid Grid.RowSpan="8" Grid.Column="3" Grid.Row="1"   
                  ScrollViewer.CanContentScroll="True" 
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  ScrollViewer.HorizontalScrollBarVisibility="Auto"
                  AutoGenerateColumns="False" Height="Auto" 
                  HorizontalAlignment="Center" Name="DataGrid" 
                  Width="Auto"
                  AlternatingRowBackground="LightGray"
                  CanUserAddRows="False"
                  IsReadOnly="True" Background="{x:Null}">

                    <DataGrid.Resources>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="White"/>
                          
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}" Header="Name" Width="Auto"  />
                        <DataGridTextColumn Binding="{Binding SerialNo}" Header="Serial No." Width="Auto" />
                        <DataGridTextColumn Binding="{Binding Make.Name}" Header="Make" Width="Auto" />
                        <DataGridTextColumn Binding="{Binding Type.Description}" Header="Type" Width="Auto" />
                        <DataGridTextColumn Binding="{Binding Quantity}" Header="Quantity" Width="Auto" />
                    </DataGrid.Columns>
                </DataGrid>

                <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="16 0 8 0" Foreground="White">Name</TextBlock>
                <TextBox Grid.Row="1" Grid.Column="1" x:Name="NameTextBox" materialDesign:HintAssist.Hint="Insert Project Name" Foreground="White">
                    <TextBox.Text>
                        <Binding Path="Name" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                            <Binding.ValidationRules>
                                <domain:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                <!--Checks for exceptions during the setting of the source property.Alternatively, set ValidatesOnExceptions to True on the Binding.-->
                                <ExceptionValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Margin="16 0 8 0" Foreground="White">Delivery Date</TextBlock>
                <DatePicker Grid.Row="2" Grid.Column="1" Height="25" Margin="0 5 0 0" x:Name="DeliveryDateDatePicker" Width="150" HorizontalAlignment="Left"  
                        materialDesign:HintAssist.Hint="Set Delivery Date" Foreground="White">
                    <DatePicker.SelectedDate>
                        <Binding Path="DeliveryDate" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <domain:PresentFutureDateValidationRule ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </DatePicker.SelectedDate>
                </DatePicker>

                <TextBlock Grid.Row="3" Grid.ColumnSpan="2" FontSize="13" FontWeight="DemiBold" VerticalAlignment="Center" Margin="16,20,8,0" Foreground="White">Project Items</TextBlock>

                <TextBlock Grid.Row="4" Grid.Column="0"  VerticalAlignment="Center" Margin="16 0 8 0" Foreground="White">Panel</TextBlock>
                <ComboBox  Grid.Row="4" Grid.Column="1" Name="PanelComboBox" materialDesign:HintAssist.Hint="Add Panel" MinWidth="72" Margin="0 0 0 0" VerticalAlignment="Bottom" Foreground="Black" BorderBrush="{x:Null}">
                    <ComboBox.SelectedValue>
                        <Binding Path="ProdID" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <domain:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.SelectedValue>
                </ComboBox>

                <TextBlock Grid.Row="5" Grid.Column="0" VerticalAlignment="Center" Margin="16,17,8,8" Foreground="White">Quanity</TextBlock>
                <TextBox Grid.Row="5" Grid.Column="1" x:Name="QuantityTextBox" materialDesign:HintAssist.Hint="Input Qty" Margin="0,13,0,3" Foreground="White">
                    <TextBox.Text>
                        <Binding Path="Quantity" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                            <Binding.ValidationRules>
                                <domain:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                <!-- Checks for exceptions during the setting of the source property.Alternatively, set ValidatesOnExceptions to True on the Binding.-->
                                <ExceptionValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button Grid.Row="6" Click="InsertItem_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" ToolTip="Add item to order list." FontSize="11" Content="Add Item" Grid.Column="1" Height="Auto"  Margin="65,15,5,10" RenderTransformOrigin="0.5,0.5" Background="#FF0F7FA1" Foreground="#DDFFEAEA" >
                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform Y="9"/>
                        </TransformGroup>
                    </Button.RenderTransform>
                </Button>

                <TextBlock Grid.Row="7" Grid.ColumnSpan="2" FontSize="13" FontWeight="DemiBold" VerticalAlignment="Center" Margin="16,15,8,0" Foreground="White">Order Details</TextBlock>

                <TextBlock Grid.Row="8" Grid.Column="0" VerticalAlignment="Center" Margin="16 0 8 0" Foreground="White">Order Date</TextBlock>
                <DatePicker Grid.Row="8" Grid.Column="1" Height="25" Margin="0 5 0 0" x:Name="OrderDateDatePicker" Width="150" HorizontalAlignment="Left"  
                        materialDesign:HintAssist.Hint="Set Order Date" Foreground="White">
                    <DatePicker.SelectedDate>
                        <Binding Path="OrderDate" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <domain:PresentFutureDateValidationRule ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </DatePicker.SelectedDate>
                </DatePicker>

                <TextBlock Grid.Row="9" Grid.Column="0"  VerticalAlignment="Center" Margin="16 10 8 0" Foreground="White">Customer</TextBlock>
                <ComboBox  Grid.Row="9" Grid.Column="1" Name="CustomerComboBox" materialDesign:HintAssist.Hint="Select Customer" MinWidth="72" Margin="0 10 0 0" VerticalAlignment="Bottom" Foreground="Black">
                    <ComboBox.SelectedValue>
                        <Binding Path="ContactID" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <domain:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.SelectedValue>
                </ComboBox>

                <TextBlock Grid.Row="10" Grid.ColumnSpan="1" VerticalAlignment="Center" Margin="16,16,8,6" Foreground="White">Assigned Emp.</TextBlock>
                <ComboBox  Grid.Row="10" Grid.Column="1" Name="AssignedEmployeeComboBox" materialDesign:HintAssist.Hint="Select Employee" MinWidth="72" Margin="0 10 0 0" VerticalAlignment="Bottom" Foreground="Black">
                    <ComboBox.SelectedValue>
                        <Binding Path="AssignedEmployeeID" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <domain:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.SelectedValue>
                </ComboBox>

                <TextBlock Grid.Row="11" Grid.Column="0"  VerticalAlignment="Center" Margin="16,16,8,6" Foreground="White">Status</TextBlock>
                <ComboBox  Grid.Row="11" Grid.Column="1" Name="OrderStatusComboBox" materialDesign:HintAssist.Hint="Select Status" MinWidth="72" Margin="0 10 0 0" VerticalAlignment="Bottom" Foreground="Black">
                    <ComboBox.SelectedValue>
                        <Binding Path="OrderStatusID" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <domain:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.SelectedValue>
                </ComboBox>

            </Grid>
        </ScrollViewer>
        <!-- start + popupbox -->
        <TextBlock Grid.Row="1"  VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="Auto" RenderTransformOrigin="0.5,0.5" Height="36" Margin="0,0,0,50" >                    
                            <Button Click="InsertButton_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="10 0 40 0" Width="100" ToolTip="Add new project." Content="Add" Background="#FF2D9DA8"/>   
                            <Button Click="ClearButton_Click"   Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0 0 40 0" Width="100"  ToolTip="Clear all values." Content="Clear" Background="#FFF9F21F" Foreground="#DD000000"/>
        </TextBlock>
        <!-- End + popupbox -->
    </Grid>
</UserControl>